{"version":3,"file":"commonHelpers.js","sources":["../src/js/custom_iziToast.js","../src/js/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst errorMessage = \"Sorry, there are no images matching<br> your search query. Please try again!\";\nexport const iziToastError = {\n    title: 'Error',\n    message: errorMessage,\n    messageSize: '16px',\n    position: 'topRight',\n    theme: 'dark',\n    backgroundColor: \"#EF4040\",\n    color: \"#ffffff\",\n}","// Описаний у документації\nimport iziToast from \"izitoast\";\nimport { iziToastError } from \"./custom_iziToast\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst form = document.querySelector('.form');\nconst search = document.querySelector('.search-container');\nconst gallery = document.querySelector('.gallery');\n\n\n\nconst URL = 'https://pixabay.com/api/';\nconst API_KEY = '41991233-e464ef3fed32efbb52a55d5bb';\n\nconst fullAddres = `${URL}?key=${API_KEY}`;\n\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const userRequest = form.elements.input.value;\n\n    fetchGallery(userRequest)\n        .then(data => {\n            renderImage(data);\n            let lightbox = new SimpleLightbox('.gallery a', {\n                captionsData: 'alt',\n                captionsPosition: 'bottom',\n                captionsDelay: 250,\n            });\n            lightbox.show();\n            lightbox.refresh();\n        })\n        .catch(error => console.log(error))\n    form.reset();\n})\n\nfunction fetchGallery(userRequest) {\n    const searchParams = new URLSearchParams({\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n        per_page: 15,\n    })\n\n    return fetch(`${fullAddres}&q=${userRequest}&${searchParams}`, {\n        method: 'GET'\n    })\n        .then((responce) => {\n            spinner();\n            return responce;\n        })\n        .then((responce) => {\n            if (!responce.ok) {\n                throw new Error(responce.status)\n            }\n            return responce.json();\n        })\n}\n\nfunction renderImage({ hits }) {\n\n    if (hits.length === 0) {\n        return iziToast.error(iziToastError);\n    }\n    const markup = hits\n        .map(({ webformatURL, largeImageURL, likes, tags, views, comments, downloads }) => {\n            return `\n                <li class=\"gallery-item\">\n                    <a\n                        class=\"gallery-link\"\n                        href=\"${largeImageURL}\"\n                        >\n                        <img\n                            class=\"gallery-image\"\n                            src=\"${webformatURL}\"\n                            alt=\"${tags}\"\n                        />\n                        <ul class=\"descriptions\">\n                            <li class=\"description-item\">\n                                <p class=\"name\">Likes</p>\n                                <p class=\"count\">${likes}</p>\n                            </li>\n                            <li class=\"description-item\">\n                                <p class=\"name\">Viewes</p>\n                                <p class=\"count\">${views}</p>\n                            </li>\n                            <li class=\"description-item\">\n                                <p class=\"name\">Comments</p>\n                                <p class=\"count\">${comments}</p>\n                            </li>\n                            <li class=\"description-item\">\n                                <p class=\"name\">Downloads</p>\n                                <p class=\"count\">${downloads}</p>\n                            </li>\n                        </ul>\n                        </a>\n                </li>\n            `\n        })\n        .join(\"\");\n\n    gallery.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction spinner() {\n    const spinner = document.createElement('p');\n    spinner.classList.add('spinner');\n    spinner.style.cssText = `\n        fontSize: 20px\n    `\n    spinner.textContent = \"LOADING...\";\n    search.append(spinner);\n}\n"],"names":["errorMessage","iziToastError","form","search","gallery","URL","API_KEY","fullAddres","e","userRequest","fetchGallery","data","renderImage","lightbox","SimpleLightbox","error","searchParams","responce","spinner","hits","iziToast","markup","webformatURL","largeImageURL","likes","tags","views","comments","downloads"],"mappings":"6vBAGA,MAAMA,EAAe,+EACRC,EAAgB,CACzB,MAAO,QACP,QAASD,EACT,YAAa,OACb,SAAU,WACV,MAAO,OACP,gBAAiB,UACjB,MAAO,SACX,ECLME,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAS,SAAS,cAAc,mBAAmB,EACnDC,EAAU,SAAS,cAAc,UAAU,EAI3CC,EAAM,2BACNC,EAAU,qCAEVC,EAAa,GAAGF,SAAWC,IAGjCJ,EAAK,iBAAiB,SAAWM,GAAM,CACnCA,EAAE,eAAc,EAEhB,MAAMC,EAAcP,EAAK,SAAS,MAAM,MAExCQ,EAAaD,CAAW,EACnB,KAAKE,GAAQ,CACVC,EAAYD,CAAI,EAChB,IAAIE,EAAW,IAAIC,EAAe,aAAc,CAC5C,aAAc,MACd,iBAAkB,SAClB,cAAe,GAC/B,CAAa,EACDD,EAAS,KAAI,EACbA,EAAS,QAAO,CAC5B,CAAS,EACA,MAAME,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACtCb,EAAK,MAAK,CACd,CAAC,EAED,SAASQ,EAAaD,EAAa,CAC/B,MAAMO,EAAe,IAAI,gBAAgB,CACrC,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EAClB,CAAK,EAED,OAAO,MAAM,GAAGT,OAAgBE,KAAeO,IAAgB,CAC3D,OAAQ,KAChB,CAAK,EACI,KAAMC,IACHC,IACOD,EACV,EACA,KAAMA,GAAa,CAChB,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MAC5B,CAAS,CACT,CAEA,SAASL,EAAY,CAAE,KAAAO,GAAQ,CAE3B,GAAIA,EAAK,SAAW,EAChB,OAAOC,EAAS,MAAMnB,CAAa,EAEvC,MAAMoB,EAASF,EACV,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,MAAAC,EAAO,KAAAC,EAAM,MAAAC,EAAO,SAAAC,EAAU,UAAAC,KACxD;AAAA;AAAA;AAAA;AAAA,gCAIaL;AAAA;AAAA;AAAA;AAAA,mCAIGD;AAAA,mCACAG;AAAA;AAAA;AAAA;AAAA;AAAA,mDAKgBD;AAAA;AAAA;AAAA;AAAA,mDAIAE;AAAA;AAAA;AAAA;AAAA,mDAIAC;AAAA;AAAA;AAAA;AAAA,mDAIAC;AAAA;AAAA;AAAA;AAAA;AAAA,aAM1C,EACA,KAAK,EAAE,EAEZxB,EAAQ,mBAAmB,aAAciB,CAAM,CACnD,CAEA,SAASH,GAAU,CACf,MAAMA,EAAU,SAAS,cAAc,GAAG,EAC1CA,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,MAAM,QAAU;AAAA;AAAA,MAGxBA,EAAQ,YAAc,aACtBf,EAAO,OAAOe,CAAO,CACzB"}